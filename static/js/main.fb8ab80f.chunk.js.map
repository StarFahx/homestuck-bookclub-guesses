{"version":3,"sources":["components/header/styles.tsx","components/personselect/styles.ts","reducers/people/index.ts","api/api.ts","api/people/get.ts","reducers/people/actions.ts","components/personselect/index.tsx","components/header/index.tsx","components/weekdisplay/styles.tsx","components/weekdisplay/index.tsx","api/weeks/get.ts","reducers/week/index.ts","components/main/index.tsx","theme.ts","reducers/pages/index.ts","api/pages/get.ts","reducers/pages/actions.ts","components/pagesdisplay/styles.ts","components/pagesdisplay/pagecard.tsx","components/pagesdisplay/newpage.tsx","components/pagesdisplay/index.tsx","api/pages/add.ts","components/weekpage/page.tsx","components/weekpage/index.tsx","styles.ts","App.tsx","serviceWorker.ts","reducers/index.ts","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","banner","backgroundColor","palette","secondary","main","color","contrastText","space","flex","icon","height","root","padding","width","item","select","minWidth","borderColor","fill","label","marginLeft","defaultState","people","status","selectPeople","state","instance","axios","create","baseURL","start","type","fail","PersonSelect","props","classes","peopleState","useSelector","dispatch","useDispatch","api","get","then","response","data","catch","err","GetPeople","FormControl","className","disabled","undefined","selected","InputLabel","htmlFor","id","Select","inputProps","name","value","onChange","e","setSelected","filter","a","target","style","colour","map","option","MenuItem","Header","AppBar","position","Toolbar","variant","to","rootbase","Button","src","Typography","noWrap","user","p","setUser","display","marginBottom","picture","title","fontFamily","fontWeight","subtitle","content","choose","arrow","margin","link","textDecoration","WeekDisplay","Card","CardMedia","component","image","CardContent","firstPage","lastPage","showButton","GetWeeks","weeks","selectWeeks","week","Main","children","forEach","push","pictureSrc","createMuiTheme","primary","light","dark","typography","body1","h6","h5","subtitle1","selectPages","pages","GetPages","weekId","success","pageCard","pageButton","fontSize","modal","border","boxShadow","shadows","modalContent","outline","modalGrid","cardContent","cardMedia","objectPosition","cardButton","flexDirection","textAlign","description","AddPageCard","onClick","onAdd","PageCard","ButtonBase","window","open","pageNumber","toString","NewPage","useState","setPageNumber","setDescription","setPictureSrc","Grid","container","xs","Input","parseInt","onAccept","PagesDisplay","allPages","modalOpen","setModalOpen","pageStatus","CircularProgress","page","spacing","justify","Modal","onClose","put","Page","tab","setTab","TabContext","TabList","event","newValue","Tab","wrapped","TabPanel","WeekPage","useParams","weekState","w","marginTop","library","add","fas","App","ThemeProvider","Container","maxWidth","path","Boolean","location","hostname","match","combineReducers","action","createStore","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.fb8ab80f.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n    space: {\r\n        flex: '1 1 auto'\r\n    },\r\n    icon: {\r\n        height: '25px'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0 10px',\r\n        width: 'max-content'\r\n    },\r\n    item: {\r\n    },\r\n    select: {\r\n        minWidth: '200px',\r\n        width: 'max-content',\r\n        '&:before': {\r\n            borderColor: theme.palette.secondary.contrastText,\r\n        },\r\n        '&:after': {\r\n            borderColor: theme.palette.secondary.contrastText,\r\n        }\r\n    },\r\n    icon: {\r\n        fill: theme.palette.secondary.contrastText,\r\n    },\r\n    label: {\r\n        color: theme.palette.secondary.contrastText,\r\n        marginLeft: '10px'\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import { PeopleState } from \"./state\";\r\nimport PeopleAction from \"./actions\";\r\nimport { RootState } from \"..\";\r\n\r\nconst defaultState : PeopleState = {\r\n    people : [],\r\n    status : 'unloaded',\r\n}\r\n\r\nexport const selectPeople = (state : RootState) => state.people;\r\n\r\nexport default function PeopleReducer(state : PeopleState = defaultState, action : PeopleAction) : PeopleState {\r\n    switch (action.type) {\r\n        case 'GET_PEOPLE_START':\r\n            return {\r\n                people : [],\r\n                status : 'loading'\r\n            };\r\n        case 'GET_PEOPLE_SUCCESS':\r\n            return {\r\n                people: action.data,\r\n                status: 'loaded'\r\n            };\r\n        case 'GET_PEOPLE_ERROR':\r\n            return {\r\n                people : [],\r\n                status: 'errored'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'production' ? 'https://hsbcguesserapi.azurewebsites.net/' : 'https://localhost:5001/'\r\n});\r\n\r\nexport default instance;","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport { GET_PEOPLE_START, GET_PEOPLE_ERROR, GET_PEOPLE_SUCCESS } from '../../reducers/people/actions';\r\nimport { Person } from '../../components/personselect';\r\n\r\nconst start = {\r\n    type : GET_PEOPLE_START\r\n};\r\n\r\nconst fail = {\r\n    type : GET_PEOPLE_ERROR,\r\n};\r\n\r\nfunction success(people : Person[]) {\r\n    return {\r\n        type : GET_PEOPLE_SUCCESS,\r\n        data : people\r\n    }\r\n};\r\n\r\nexport default function GetPeople() {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start);\r\n        return api.get(`/people`)\r\n            .then(response => dispatch(success(response.data as Person[])))\r\n            .catch(err => dispatch(fail));\r\n    }\r\n}","import { Person } from \"../../components/personselect\";\r\n\r\nexport const GET_PEOPLE_START = 'GET_PEOPLE_START';\r\nexport const GET_PEOPLE_SUCCESS = 'GET_PEOPLE_SUCCESS';\r\nexport const GET_PEOPLE_ERROR = 'GET_PEOPLE_ERROR';\r\n\r\nexport interface PeopleStartAction {\r\n    type : typeof GET_PEOPLE_START;\r\n}\r\n\r\nexport interface PeopleSuccessAction {\r\n    type : typeof GET_PEOPLE_SUCCESS;\r\n    data : Person[];\r\n}\r\n\r\nexport interface PeopleErrorAction {\r\n    type : typeof GET_PEOPLE_ERROR;\r\n}\r\n\r\ntype PeopleAction = PeopleStartAction | PeopleSuccessAction | PeopleErrorAction;\r\n\r\nexport default PeopleAction;","import React from 'react';\r\nimport { Select, FormControl, InputLabel, MenuItem } from '@material-ui/core';\r\nimport { Colour } from '../../consts/colours';\r\nimport useStyles from './styles';\r\nimport { selectPeople } from '../../reducers/people';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GetPeople from '../../api/people/get';\r\n\r\nexport interface Person {\r\n    id : number\r\n    name : string;\r\n    colour : Colour;\r\n}\r\n\r\nexport interface PersonSelectProps {\r\n    id : string;\r\n    selected : Person | undefined;\r\n    setSelected : (p : Person) => void;\r\n}\r\n\r\nexport default function PersonSelect(props : PersonSelectProps) {\r\n    const classes = useStyles();\r\n    const peopleState = useSelector(selectPeople);\r\n    const dispatch = useDispatch();\r\n\r\n    if (peopleState.status === 'unloaded') {\r\n        GetPeople()(dispatch);\r\n    }\r\n\r\n    return(\r\n        <FormControl className={classes.root} disabled={props.selected !== undefined}>\r\n            <InputLabel\r\n                className={classes.label}\r\n                htmlFor={props.id}\r\n            >\r\n                User\r\n            </InputLabel>\r\n            <Select\r\n                inputProps={{\r\n                    name: 'user',\r\n                    id: props.id,\r\n                    classes: { icon: classes.icon}\r\n                }}\r\n                value={props.selected?.name}\r\n                onChange={e => props.setSelected(peopleState.people.filter(a => a.name === e.target.value)[0])}\r\n                className={classes.select}\r\n                style={{color: props.selected !== undefined ? props.selected.colour : 'black'}}\r\n            >\r\n                {\r\n                    peopleState.people.map(option =>\r\n                        <MenuItem\r\n                            className={classes.item}\r\n                            style={{color: option.colour}}\r\n                            value={option.name}\r\n                        >\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    )\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport PersonSelect from '../personselect';\r\nimport HeaderProps from './props';\r\nimport { Link } from 'react-router-dom';\r\nimport { rootbase } from '../../App';\r\n\r\nexport default function Header(props : HeaderProps) {\r\n    const classes = useStyles();\r\n    return(\r\n        <header >\r\n            <AppBar position='static'>\r\n                <Toolbar\r\n                    className={classes.banner}\r\n                    variant='dense'\r\n                >\r\n                    <Link\r\n                        to={rootbase}\r\n                    >\r\n                        <Button>\r\n                            <img \r\n                                src='/homestuck-bookclub-guesses/sburb.png'\r\n                                className={classes.icon}\r\n                            />\r\n                        </Button>\r\n                    </Link>\r\n                    <Typography \r\n                        variant='h6'\r\n                        noWrap\r\n                    >\r\n                        Homestuck Book Club Guesser\r\n                    </Typography>\r\n                    <div className={classes.space} />\r\n                    <PersonSelect\r\n                        id='people'\r\n                        selected={props.user}\r\n                        setSelected={p => props.setUser(p)}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </header>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginBottom: '15px'\r\n    },\r\n    picture: {\r\n        width: '150px',\r\n        height: '150px'\r\n    },\r\n    title : {\r\n        fontFamily: '\"Courier New\", monospace',\r\n        fontWeight: 'bold'\r\n    },\r\n    subtitle : {\r\n        fontFamily: '\"Courier New\", monospace',\r\n        fontWeight: 'bold'\r\n    },\r\n    content: {\r\n        flex: '1 auto'\r\n    },\r\n    choose: {\r\n        padding: 0,\r\n        width: '150px',\r\n        height: '150px'\r\n    },\r\n    arrow: {\r\n        margin: '63px 63px'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, CardMedia, CardContent, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { rootbase } from '../../App';\r\n\r\nexport interface WeekProps {\r\n    id : number;\r\n    image : string;\r\n    title : string;\r\n    firstPage : number;\r\n    lastPage : number;\r\n    showButton : boolean;\r\n}\r\n\r\nexport default function WeekDisplay(props : WeekProps) {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card \r\n            className={classes.root}\r\n        >\r\n            <CardMedia \r\n                className={classes.picture}\r\n                component='img'\r\n                src={props.image}\r\n                title={props.title}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography className={classes.title} variant='h5'>{props.title}</Typography>\r\n                <Typography className={classes.subtitle} variant='subtitle1' color='textSecondary'>{`${props.firstPage} – ${props.lastPage}`}</Typography>\r\n            </CardContent>\r\n\r\n            {\r\n                props.showButton ? \r\n                <Link className={classes.link} to={`${rootbase}week/${props.id}`}>\r\n                    <Button className={classes.choose}>\r\n                        <Typography variant='h6'>{'==>'}</Typography>\r\n                    </Button>\r\n                </Link> : <></>\r\n            }\r\n            \r\n        </Card>\r\n    );\r\n}","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport Week from '../../reducers/week/week';\r\n\r\nconst start = {\r\n    type : 'GET_WEEKS_START'\r\n};\r\n\r\nconst fail = {\r\n    type : 'GET_WEEKS_ERROR'\r\n};\r\n\r\nfunction success(weeks : Week[]) {\r\n    return {\r\n        type : 'GET_WEEKS_SUCCESS',\r\n        data : weeks\r\n    }\r\n};\r\n\r\nexport default function GetWeeks() {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start)\r\n        return api.get('/week')\r\n            .then(response => dispatch(success(response.data as Week[])))\r\n            .catch(err => dispatch(fail));\r\n    }\r\n}","import { WeekState } from \"./state\";\r\nimport WeekAction from \"./actions\";\r\nimport { RootState } from \"..\";\r\n\r\nconst defaultState : WeekState = {\r\n    weeks : [],\r\n    status : 'unloaded',\r\n}\r\n\r\nexport const selectWeeks = (state : RootState) => state.week;\r\n\r\nexport default function WeekReducer(state : WeekState = defaultState, action : WeekAction) : WeekState {\r\n    switch (action.type) {\r\n        case 'GET_WEEKS_START':\r\n            return {\r\n                weeks : [],\r\n                status : 'loading'\r\n            };\r\n        case 'GET_WEEKS_SUCCESS':\r\n            return {\r\n                weeks: action.data,\r\n                status: 'loaded'\r\n            };\r\n        case 'GET_WEEKS_ERROR':\r\n            return {\r\n                weeks : [],\r\n                status: 'errored'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { ReactElement } from 'react';\r\nimport WeekDisplay from '../weekdisplay';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GetWeeks from '../../api/weeks/get';\r\nimport { selectWeeks } from '../../reducers/week';\r\n\r\nexport default function Main() {\r\n    const weeks = useSelector(selectWeeks);\r\n    const dispatch = useDispatch();\r\n    const children : ReactElement[] = [];\r\n\r\n    if (weeks.status === 'unloaded') {\r\n        GetWeeks()(dispatch);\r\n    }\r\n\r\n    switch (weeks.status) {\r\n        case 'loaded':\r\n            weeks.weeks.forEach(week => {\r\n                children.push(<WeekDisplay \r\n                    id={week.id}\r\n                    title={week.name}\r\n                    firstPage={week.firstPage}\r\n                    lastPage={week.lastPage}\r\n                    image={week.pictureSrc}\r\n                    showButton={true}\r\n                />)\r\n            });\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#2CFF4B',\r\n            light: '#80ff92',\r\n            dark: '#082A00',\r\n            contrastText: 'white'\r\n        },\r\n        secondary: {\r\n            main: '#969696',\r\n            light: '#f2f2f2',\r\n            contrastText: 'white'\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: '\"Courier New\", courier, monospace',\r\n        body1: {\r\n            fontWeight: 'bold'\r\n        },\r\n        h6: {\r\n            fontWeight: 'bold'\r\n        },\r\n        h5: {\r\n            fontWeight: 'bold'\r\n        },\r\n        subtitle1: {\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import PagesState from \"./state\";\r\nimport PagesAction, { GET_PAGES_START, GET_PAGES_SUCCESS, GET_PAGES_ERROR, ADD_PAGE_SUCCESS, ADD_PAGE_ERROR } from \"./actions\";\r\nimport { RootState } from \"..\";\r\n\r\nconst defaultState : PagesState = {};\r\n\r\nexport const selectPages = (state : RootState) => state.pages;\r\n\r\nexport default function PagesReducer(state : PagesState = defaultState, action : PagesAction) : PagesState {\r\n    switch (action.type) {\r\n        case GET_PAGES_START:\r\n            state[action.weekId] = { status: 'loading', pages: [] };\r\n            return {...state};\r\n        case GET_PAGES_ERROR:\r\n            state[action.weekId] = { status: 'errored', pages: [] };\r\n            return {...state};\r\n        case GET_PAGES_SUCCESS:\r\n            state[action.weekId] = { status: 'loaded', pages: action.data };\r\n            return {...state};\r\n        case ADD_PAGE_SUCCESS:\r\n            state[action.weekId] = { status: 'unloaded', pages: [] };\r\n            return {...state};\r\n        case ADD_PAGE_ERROR:\r\n            state[action.weekId] = { status: 'unloaded', pages: [] };\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n}","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport { GET_PAGES_START, GET_PAGES_ERROR, GET_PAGES_SUCCESS } from '../../reducers/pages/actions';\r\nimport Page from '../../reducers/pages/page';\r\n\r\nfunction start(weekId : number) {\r\n    return {\r\n        type : GET_PAGES_START,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction fail(weekId : number) {\r\n    return {\r\n        type : GET_PAGES_ERROR,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction success(weekId : number, pages : Page[]) {\r\n    return {\r\n        type : GET_PAGES_SUCCESS,\r\n        weekId : weekId,\r\n        data : pages\r\n    }\r\n};\r\n\r\nexport default function GetPages(weekId : number) {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start(weekId));\r\n        return api.get(`/week/${weekId}/page`)\r\n            .then(response => dispatch(success(weekId, response.data as Page[])))\r\n            .catch(err => dispatch(fail(weekId)));\r\n    }\r\n}","import Page from \"./page\";\r\n\r\nexport const GET_PAGES_START = 'get_pages_start';\r\nexport const GET_PAGES_SUCCESS = 'get_pages_success';\r\nexport const GET_PAGES_ERROR = 'get_pages_error';\r\n\r\nexport const ADD_PAGE_START = 'add_page_start';\r\nexport const ADD_PAGE_SUCCESS = 'add_page_success';\r\nexport const ADD_PAGE_ERROR = 'add_page_error';\r\n\r\nexport interface GetPagesStartAction {\r\n    type : typeof GET_PAGES_START;\r\n    weekId : number;\r\n}\r\n\r\nexport interface GetPagesSuccessAction {\r\n    type : typeof GET_PAGES_SUCCESS;\r\n    weekId : number;\r\n    data : Page[];\r\n}\r\n\r\nexport interface GetPagesErrorAction {\r\n    type : typeof GET_PAGES_ERROR;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageStartAction {\r\n    type : typeof ADD_PAGE_START;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageSuccessAction {\r\n    type : typeof ADD_PAGE_SUCCESS;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageErrorAction {\r\n    type : typeof ADD_PAGE_ERROR;\r\n    weekId : number;\r\n}\r\n\r\n\r\ntype GetPagesAction = GetPagesStartAction | GetPagesSuccessAction | GetPagesErrorAction;\r\ntype AddPageAction = AddPageStartAction | AddPageSuccessAction | AddPageErrorAction;\r\ntype PagesAction = GetPagesAction | AddPageAction;\r\n\r\nexport default PagesAction;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageCard: {\r\n        width: '220px',\r\n        height: 350\r\n    },\r\n    pageButton: {\r\n        width: '220px',\r\n        height: 350,\r\n        fontSize: '3em'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 700,\r\n        height: 300,\r\n        margin: 'auto',\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5]\r\n    },\r\n    modalContent: {\r\n        height: 252,\r\n        width: 652,\r\n        backgroundColor: 'white',\r\n        outline: 'none',\r\n        padding: 24\r\n    },\r\n    modalGrid: {\r\n        height: 202\r\n    },\r\n    cardContent: {\r\n        width: 220,\r\n        flex: '1 0 auto'\r\n    },\r\n    cardMedia: {\r\n        width: 220,\r\n        height: 220,\r\n        objectPosition: 'bottom',\r\n    },\r\n    cardButton: {\r\n        width: 220,\r\n        height: 350,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    description: {\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, Typography, Button, ButtonBase, CardContent, CardMedia } from '@material-ui/core';\r\nimport Page from '../../reducers/pages/page';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface AddPageProps {\r\n    weekId : number;\r\n    onAdd : () => void;\r\n}\r\n\r\nexport function AddPageCard(props : AddPageProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.pageCard}>\r\n            <Button \r\n                className={classes.pageButton}\r\n                onClick={props.onAdd}\r\n            >\r\n                +\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default function PageCard(props : Page) {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card className={classes.pageCard}>\r\n            <ButtonBase className={classes.cardButton} onClick={() => window.open(`https://www.homestuck.com/story/${props.pageNumber}`)}>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography className={classes.title} variant='h6'>#{props.pageNumber}</Typography>\r\n                </CardContent>\r\n                <CardMedia \r\n                    className={classes.cardMedia}\r\n                    component='img'\r\n                    title={props.pageNumber.toString()}\r\n                    src={props.pictureSrc}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography className={classes.description} variant='subtitle1'>{props.description}</Typography>\r\n                </CardContent>\r\n            </ButtonBase>\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Grid, Typography, Button, Input } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nexport interface NewPageProps {\r\n    onAccept : (pageNumber : number, description : string, pictureSrc : string) => void;\r\n}\r\n\r\nexport default function NewPage(props : NewPageProps) {\r\n    const classes = useStyles();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [pictureSrc, setPictureSrc] = useState('');\r\n    return(\r\n        <div className={classes.modalContent}>\r\n            <Grid className={classes.modalGrid} container>\r\n                <Grid item xs={12}><Typography variant='h4'>Add New Page</Typography></Grid>\r\n                <Grid item xs={6}><label>Page Number</label></Grid>\r\n                <Grid item xs={6}><Input type='number' value={pageNumber} onChange={e => setPageNumber(parseInt(e.target.value))} /></Grid>\r\n                <Grid item xs={6}><label>Description</label></Grid>\r\n                <Grid item xs={6}><Input type='text' value={description} onChange={e => setDescription(e.target.value)} /></Grid>\r\n                <Grid item xs={6}><label>Image Link</label></Grid>\r\n                <Grid item xs={6}><Input type='text' value={pictureSrc} onChange={e => setPictureSrc(e.target.value)} /></Grid>\r\n            </Grid>\r\n            <Button\r\n                onClick={() => props.onAccept(pageNumber, description, pictureSrc)}\r\n                variant='contained'\r\n                color='primary'\r\n            >\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectPages } from '../../reducers/pages';\r\nimport GetPages from '../../api/pages/get';\r\nimport { CircularProgress, Grid, Modal, Typography, Button } from '@material-ui/core';\r\nimport PageCard, { AddPageCard } from './pagecard';\r\nimport useStyles from './styles';\r\nimport NewPage from './newpage';\r\nimport AddPage from '../../api/pages/add';\r\n\r\nexport interface PagesProps {\r\n    weekId : number;\r\n}\r\n\r\nexport default function PagesDisplay(props : PagesProps) {\r\n    const allPages = useSelector(selectPages);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const pageStatus = allPages[props.weekId];\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const children = [];\r\n\r\n    if (pageStatus === undefined) {\r\n        GetPages(props.weekId)(dispatch);\r\n    } else {\r\n        switch (pageStatus.status) {\r\n            case 'unloaded':\r\n                GetPages(props.weekId)(dispatch);\r\n                break;\r\n            case 'loading':\r\n                children.push(<Grid item xs={12}><CircularProgress /></Grid>);\r\n                break;\r\n            case 'loaded':\r\n                pageStatus.pages.forEach(page => {\r\n                    children.push(<Grid item xs={4}><PageCard {...page} /></Grid>);\r\n                });\r\n                children.push(<Grid item xs={4}><AddPageCard weekId={props.weekId} onAdd={() => setModalOpen(true)}/></Grid>);\r\n                break;\r\n            case 'errored':\r\n                children.push(<Grid item xs={12}><span>Error</span></Grid>);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function addPage(pageNumber : number, description : string, pictureSrc : string) {\r\n        setModalOpen(false);\r\n        AddPage(props.weekId, { pageNumber, description, pictureSrc })(dispatch);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} justify='space-evenly'>\r\n                {children}\r\n            </Grid>\r\n            <Modal\r\n                className={classes.modal}\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n            >\r\n                <NewPage onAccept={addPage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport { ADD_PAGE_START, ADD_PAGE_SUCCESS, ADD_PAGE_ERROR } from '../../reducers/pages/actions';\r\nimport Page from '../../reducers/pages/page';\r\n\r\nfunction start(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_START,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction fail(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_ERROR,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction success(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_SUCCESS,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nexport default function AddPage(weekId : number, page : Page) {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start(weekId))\r\n        return api.put(`/week/${weekId}/page`, page)\r\n            .then(response => dispatch(success(weekId)))\r\n            .catch(err => dispatch(fail(weekId)));\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport WeekDisplay from '../weekdisplay';\r\nimport { Tab } from '@material-ui/core';\r\nimport { TabPanel, TabContext, TabList } from '@material-ui/lab';\r\nimport PagesDisplay from '../pagesdisplay';\r\nimport Week from '../../reducers/week/week';\r\nimport { Person } from '../personselect';\r\nimport AnswerPage from '../answerpage';\r\n\r\nexport interface PageProps {\r\n    week : Week;\r\n    user : Person | undefined;\r\n}\r\n\r\ntype TabType = 'pages' | 'answer' | 'guesses';\r\n\r\nexport default function Page(props : PageProps) {\r\n    const [tab, setTab] = useState<TabType>('pages');\r\n    const changeTab = (event: React.ChangeEvent<{}>, newValue : TabType) => {\r\n        setTab(newValue);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <WeekDisplay\r\n                id={props.week.id}\r\n                title={props.week.name}\r\n                firstPage={props.week.firstPage}\r\n                lastPage={props.week.lastPage}\r\n                image={props.week.pictureSrc}\r\n                showButton={false}\r\n            />\r\n            <TabContext value={tab}>\r\n                <TabList onChange={changeTab} variant='fullWidth'>\r\n                    <Tab\r\n                        value='pages'\r\n                        label='Pages'\r\n                        wrapped\r\n                    />\r\n                    <Tab\r\n                        value='answer'\r\n                        label='My Answer'\r\n                        disabled={props.user === undefined}\r\n                        wrapped\r\n                    />\r\n                    <Tab\r\n                        value='guesses'\r\n                        label='My Guesses'\r\n                        disabled={props.user === undefined}\r\n                        wrapped\r\n                    />\r\n                </TabList>\r\n                <TabPanel value='pages'>\r\n                    <PagesDisplay weekId={props.week.id} />\r\n                </TabPanel>\r\n                <TabPanel value='answer'>\r\n                    This bit of the site is still under construction :(\r\n                </TabPanel>\r\n                <TabPanel value='guesses'>\r\n                    This bit of the site is still under construction :(\r\n                </TabPanel>\r\n            </TabContext>\r\n        </>\r\n    );\r\n}","import React, { ReactElement } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GetWeeks from '../../api/weeks/get';\r\nimport { CircularProgress, Typography } from '@material-ui/core';\r\nimport Page from './page';\r\nimport { selectWeeks } from '../../reducers/week';\r\nimport { Person } from '../personselect';\r\n\r\nexport default function WeekPage(props : { user : Person | undefined }) {\r\n    let { id } = useParams();\r\n    const children : ReactElement[] = [];\r\n    const weekState = useSelector(selectWeeks);\r\n    const dispatch = useDispatch();\r\n\r\n    switch (weekState.status) {\r\n        case 'unloaded':\r\n            GetWeeks()(dispatch);\r\n            children.push(<CircularProgress />);\r\n            break;\r\n        case 'loading':\r\n            children.push(<CircularProgress />);\r\n            break;\r\n        case 'errored':\r\n            children.push(<Typography>There was an error loading the weeks</Typography>);\r\n            break;\r\n        default:\r\n            const week = weekState.weeks.filter(w => w.id === parseInt(id))[0];\r\n            if (week !== undefined) {\r\n                children.push(\r\n                    <Page week={week} user={props.user} />\r\n                );\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: '10px'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/header';\r\nimport Main from './components/main';\r\nimport { ThemeProvider, Container } from '@material-ui/core';\r\nimport theme from './theme';\r\nimport { Person } from './components/personselect';\r\nimport WeekPage from './components/weekpage';\r\nimport useStyles from './styles';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/pro-solid-svg-icons';\r\n\r\nlibrary.add(fas);\r\n\r\n\r\nconst rootbase = process.env.NODE_ENV === 'production' ? '/homestuck-bookclub-guesses/' : '/';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<Person | undefined>(undefined);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Header user={user} setUser={p => setUser(p)} />\r\n          <Container\r\n              className={classes.container}\r\n              maxWidth='lg'\r\n          >\r\n            <Switch>\r\n              <Route path={`${rootbase}week/:id`}>\r\n                <WeekPage user={user} />\r\n              </Route>\r\n              <Route path={rootbase}>\r\n                <Main />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n        </Router>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport { rootbase };\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport WeekReducer from './week';\r\nimport PagesReducer from './pages';\r\nimport PeopleReducer from './people';\r\n\r\nconst root = combineReducers({week : WeekReducer, pages : PagesReducer, people: PeopleReducer});\r\n\r\nexport default root;\r\n\r\nexport type RootState = ReturnType<typeof root>;","import { createStore } from 'redux';\r\nimport root from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(root, composeWithDevTools());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}