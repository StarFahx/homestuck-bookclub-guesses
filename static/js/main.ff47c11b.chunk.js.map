{"version":3,"sources":["components/header/styles.tsx","components/personselect/styles.ts","components/personselect/index.tsx","consts/colours.ts","consts/people.ts","components/header/index.tsx","components/weekdisplay/styles.tsx","components/weekdisplay/index.tsx","api/api.ts","api/weeks/get.ts","reducers/week/index.ts","components/main/index.tsx","theme.ts","reducers/pages/index.ts","api/pages/get.ts","reducers/pages/actions.ts","components/pagesdisplay/styles.ts","components/pagesdisplay/pagecard.tsx","components/pagesdisplay/newpage.tsx","components/pagesdisplay/index.tsx","api/pages/add.ts","components/weekpage/page.tsx","components/weekpage/index.tsx","styles.ts","App.tsx","serviceWorker.ts","reducers/index.ts","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","banner","backgroundColor","palette","secondary","main","color","contrastText","space","flex","icon","height","root","padding","width","item","select","minWidth","borderColor","fill","label","marginLeft","PersonSelect","props","classes","FormControl","className","disabled","undefined","selected","InputLabel","htmlFor","id","Select","inputProps","name","value","onChange","e","setSelected","options","filter","a","target","style","map","option","MenuItem","People","Header","AppBar","position","Toolbar","variant","to","rootbase","Button","src","Typography","noWrap","user","p","setUser","display","marginBottom","picture","title","fontFamily","fontWeight","subtitle","content","choose","arrow","margin","link","textDecoration","WeekDisplay","Card","CardMedia","component","image","CardContent","firstPage","lastPage","showButton","instance","axios","create","baseURL","start","type","fail","GetWeeks","dispatch","api","get","then","response","data","catch","err","defaultState","weeks","status","selectWeeks","state","week","Main","useSelector","useDispatch","children","forEach","push","pictureSrc","createMuiTheme","primary","light","dark","typography","body1","h6","h5","subtitle1","selectPages","pages","GetPages","weekId","success","pageCard","pageButton","fontSize","modal","border","boxShadow","shadows","modalContent","outline","modalGrid","cardContent","textAlign","description","AddPageCard","onClick","onAdd","PageCard","ButtonBase","window","open","pageNumber","NewPage","useState","setPageNumber","setDescription","Grid","container","xs","Input","parseInt","onAccept","PagesDisplay","allPages","modalOpen","setModalOpen","pageStatus","CircularProgress","page","spacing","justify","Modal","onClose","put","Page","tab","setTab","TabContext","TabList","event","newValue","Tab","wrapped","TabPanel","WeekPage","useParams","weekState","w","marginTop","App","ThemeProvider","Container","maxWidth","path","Boolean","location","hostname","match","combineReducers","action","createStore","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ff47c11b.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n    space: {\r\n        flex: '1 1 auto'\r\n    },\r\n    icon: {\r\n        height: '25px'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0 10px',\r\n        width: 'max-content'\r\n    },\r\n    item: {\r\n    },\r\n    select: {\r\n        minWidth: '200px',\r\n        width: 'max-content',\r\n        '&:before': {\r\n            borderColor: theme.palette.secondary.contrastText,\r\n        },\r\n        '&:after': {\r\n            borderColor: theme.palette.secondary.contrastText,\r\n        }\r\n    },\r\n    icon: {\r\n        fill: theme.palette.secondary.contrastText,\r\n    },\r\n    label: {\r\n        color: theme.palette.secondary.contrastText,\r\n        marginLeft: '10px'\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import React, { useState } from 'react';\r\nimport { Select, FormControl, InputLabel, MenuItem } from '@material-ui/core';\r\nimport { Colour } from '../../consts/colours';\r\nimport useStyles from './styles';\r\n\r\nexport interface Person {\r\n    name : string;\r\n    color : Colour;\r\n}\r\n\r\nexport interface PersonSelectProps {\r\n    id : string;\r\n    options : Person[];\r\n    selected : Person | undefined;\r\n    setSelected : (p : Person) => void;\r\n}\r\n\r\nexport default function PersonSelect(props : PersonSelectProps) {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <FormControl className={classes.root} disabled={props.selected !== undefined}>\r\n            <InputLabel\r\n                className={classes.label}\r\n                htmlFor={props.id}\r\n            >\r\n                User\r\n            </InputLabel>\r\n            <Select\r\n                inputProps={{\r\n                    name: 'user',\r\n                    id: props.id,\r\n                    classes: { icon: classes.icon}\r\n                }}\r\n                value={props.selected?.name}\r\n                onChange={e => props.setSelected(props.options.filter(a => a.name === e.target.value)[0])}\r\n                className={classes.select}\r\n                style={{color: props.selected !== undefined ? props.selected.color : 'black'}}\r\n            >\r\n                {\r\n                    props.options.map(option =>\r\n                        <MenuItem\r\n                            className={classes.item}\r\n                            style={{color: option.color}}\r\n                            value={option.name}\r\n                        >\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    )\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}","import { AnyMxRecord } from \"dns\";\r\n\r\nexport const John = '#0715cd';\r\nexport const Rose = '#b536da';\r\nexport const Dave = '#e00707';\r\nexport const Jade = '#4ac925';\r\nexport type Beta = typeof John | typeof Rose | typeof Dave | typeof Jade;\r\n\r\nexport const Jane = '#00d5f2';\r\nexport const Dirk = '#f2a400';\r\nexport const Roxy = '#ff6ff2';\r\nexport const Jake = '#1f9400';\r\nexport type Alpha = typeof Jane | typeof Dirk | typeof Roxy | typeof Jake;\r\n\r\nexport const Karkat = '#626262';\r\nexport const Aradia = '#a10000';\r\nexport const Tavros = '#a15000';\r\nexport const Sollux = '#a1a100';\r\nexport const Nepeta = '#416600';\r\nexport const Kanaya = '#008141';\r\nexport const Terezi = '#008282';\r\nexport const Vriska = '#005682';\r\nexport const Equius = '#000056';\r\nexport const Gamzee = '#2b0057';\r\nexport const Eridan = '#6a006a';\r\nexport const Feferi = '#77003c';\r\nexport type Troll = typeof Karkat |\r\n    typeof Aradia |\r\n    typeof Tavros |\r\n    typeof Sollux |\r\n    typeof Nepeta |\r\n    typeof Kanaya |\r\n    typeof Terezi |\r\n    typeof Vriska |\r\n    typeof Equius |\r\n    typeof Gamzee |\r\n    typeof Eridan |\r\n    typeof Feferi;\r\n\r\nexport const Adam = '#ffd633';\r\nexport const Amy = '#00997a';\r\nexport const Calum = '#b22222'\r\nexport type Custom = typeof Adam | typeof Amy | typeof Calum;\r\n\r\nexport type Colour = Alpha | Beta | Troll | Custom;","import { Person } from \"../components/personselect\";\r\nimport { Nepeta, Dirk, Roxy, John, Kanaya, Amy, Adam, Calum, Jane } from './colours';\r\n\r\nexport const People : Person[] = [\r\n    {name: 'genialConcusser', color: Calum},\r\n    {name: 'tempestuousGeometrist', color: Dirk},\r\n    {name: 'exceptionallyBaptised', color: Adam},\r\n    {name: 'catgirlAfficionado', color: Nepeta},\r\n    {name: 'annoyinglyAnxious', color: Kanaya},\r\n    {name: 'crabbyGastropod', color: Amy},\r\n    {name: 'asinineCalculator', color: Jane},\r\n    {name: 'trollCynic', color: John},\r\n    {name: 'tiredAstronomer', color: Roxy}\r\n  ];","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport PersonSelect from '../personselect';\r\nimport { People } from '../../consts/people';\r\nimport HeaderProps from './props';\r\nimport { Link } from 'react-router-dom';\r\nimport { rootbase } from '../../App';\r\n\r\nexport default function Header(props : HeaderProps) {\r\n    const classes = useStyles();\r\n    return(\r\n        <header >\r\n            <AppBar position='static'>\r\n                <Toolbar\r\n                    className={classes.banner}\r\n                    variant='dense'\r\n                >\r\n                    <Link\r\n                        to={rootbase}\r\n                    >\r\n                        <Button>\r\n                            <img \r\n                                src='/homestuck-bookclub-guesses/sburb.png'\r\n                                className={classes.icon}\r\n                            />\r\n                        </Button>\r\n                    </Link>\r\n                    <Typography \r\n                        variant='h6'\r\n                        noWrap\r\n                    >\r\n                        Homestuck Book Club Guesser\r\n                    </Typography>\r\n                    <div className={classes.space} />\r\n                    <PersonSelect\r\n                        id='people'\r\n                        options={People}\r\n                        selected={props.user}\r\n                        setSelected={p => props.setUser(p)}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </header>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginBottom: '15px'\r\n    },\r\n    picture: {\r\n        width: '150px',\r\n        height: '150px'\r\n    },\r\n    title : {\r\n        fontFamily: '\"Courier New\", monospace',\r\n        fontWeight: 'bold'\r\n    },\r\n    subtitle : {\r\n        fontFamily: '\"Courier New\", monospace',\r\n        fontWeight: 'bold'\r\n    },\r\n    content: {\r\n        flex: '1 auto'\r\n    },\r\n    choose: {\r\n        padding: 0,\r\n        width: '150px',\r\n        height: '150px'\r\n    },\r\n    arrow: {\r\n        margin: '63px 63px'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, CardMedia, CardContent, Typography, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { rootbase } from '../../App';\r\n\r\nexport interface WeekProps {\r\n    id : number;\r\n    image : string;\r\n    title : string;\r\n    firstPage : number;\r\n    lastPage : number;\r\n    showButton : boolean;\r\n}\r\n\r\nexport default function WeekDisplay(props : WeekProps) {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card \r\n            className={classes.root}\r\n        >\r\n            <CardMedia \r\n                className={classes.picture}\r\n                component='img'\r\n                src={props.image}\r\n                title={props.title}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography className={classes.title} variant='h5'>{props.title}</Typography>\r\n                <Typography className={classes.subtitle} variant='subtitle1' color='textSecondary'>{`${props.firstPage} – ${props.lastPage}`}</Typography>\r\n            </CardContent>\r\n\r\n            {\r\n                props.showButton ? \r\n                <Link className={classes.link} to={`${rootbase}week/${props.id}`}>\r\n                    <Button className={classes.choose}>\r\n                        <Typography variant='h6'>{'==>'}</Typography>\r\n                    </Button>\r\n                </Link> : <></>\r\n            }\r\n            \r\n        </Card>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'production' ? 'https://hsbcguesserapi.azurewebsites.net/' : 'https://localhost:5001/'\r\n});\r\n\r\nexport default instance;","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport Week from '../../reducers/week/week';\r\n\r\nconst start = {\r\n    type : 'GET_WEEKS_START'\r\n};\r\n\r\nconst fail = {\r\n    type : 'GET_WEEKS_ERROR'\r\n};\r\n\r\nfunction success(weeks : Week[]) {\r\n    return {\r\n        type : 'GET_WEEKS_SUCCESS',\r\n        data : weeks\r\n    }\r\n};\r\n\r\nexport default function GetWeeks() {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start)\r\n        return api.get('/week')\r\n            .then(response => dispatch(success(response.data as Week[])))\r\n            .catch(err => dispatch(fail));\r\n    }\r\n}","import { WeekState } from \"./state\";\r\nimport WeekAction from \"./actions\";\r\nimport { RootState } from \"..\";\r\n\r\nconst defaultState : WeekState = {\r\n    weeks : [],\r\n    status : 'unloaded',\r\n}\r\n\r\nexport const selectWeeks = (state : RootState) => state.week;\r\n\r\nexport default function WeekReducer(state : WeekState = defaultState, action : WeekAction) : WeekState {\r\n    switch (action.type) {\r\n        case 'GET_WEEKS_START':\r\n            return {\r\n                weeks : [],\r\n                status : 'loading'\r\n            };\r\n        case 'GET_WEEKS_SUCCESS':\r\n            return {\r\n                weeks: action.data,\r\n                status: 'loaded'\r\n            };\r\n        case 'GET_WEEKS_ERROR':\r\n            return {\r\n                weeks : [],\r\n                status: 'errored'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { ReactElement } from 'react';\r\nimport WeekDisplay from '../weekdisplay';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GetWeeks from '../../api/weeks/get';\r\nimport { selectWeeks } from '../../reducers/week';\r\n\r\nexport default function Main() {\r\n    const weeks = useSelector(selectWeeks);\r\n    const dispatch = useDispatch();\r\n    const children : ReactElement[] = [];\r\n\r\n    if (weeks.status === 'unloaded') {\r\n        GetWeeks()(dispatch);\r\n    }\r\n\r\n    switch (weeks.status) {\r\n        case 'loaded':\r\n            weeks.weeks.forEach(week => {\r\n                children.push(<WeekDisplay \r\n                    id={week.id}\r\n                    title={week.name}\r\n                    firstPage={week.firstPage}\r\n                    lastPage={week.lastPage}\r\n                    image={week.pictureSrc}\r\n                    showButton={true}\r\n                />)\r\n            });\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#2CFF4B',\r\n            light: '#80ff92',\r\n            dark: '#082A00',\r\n            contrastText: 'white'\r\n        },\r\n        secondary: {\r\n            main: '#969696',\r\n            light: '#f2f2f2',\r\n            contrastText: 'white'\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: '\"Courier New\", courier, monospace',\r\n        body1: {\r\n            fontWeight: 'bold'\r\n        },\r\n        h6: {\r\n            fontWeight: 'bold'\r\n        },\r\n        h5: {\r\n            fontWeight: 'bold'\r\n        },\r\n        subtitle1: {\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import PagesState from \"./state\";\r\nimport PagesAction, { GET_PAGES_START, GET_PAGES_SUCCESS, GET_PAGES_ERROR, ADD_PAGE_SUCCESS, ADD_PAGE_ERROR } from \"./actions\";\r\nimport { RootState } from \"..\";\r\n\r\nconst defaultState : PagesState = {};\r\n\r\nexport const selectPages = (state : RootState) => state.pages;\r\n\r\nexport default function PagesReducer(state : PagesState = defaultState, action : PagesAction) : PagesState {\r\n    switch (action.type) {\r\n        case GET_PAGES_START:\r\n            state[action.weekId] = { status: 'loading', pages: [] };\r\n            return {...state};\r\n        case GET_PAGES_ERROR:\r\n            state[action.weekId] = { status: 'errored', pages: [] };\r\n            return {...state};\r\n        case GET_PAGES_SUCCESS:\r\n            state[action.weekId] = { status: 'loaded', pages: action.data };\r\n            return {...state};\r\n        case ADD_PAGE_SUCCESS:\r\n            state[action.weekId] = { status: 'unloaded', pages: [] };\r\n            return {...state};\r\n        case ADD_PAGE_ERROR:\r\n            state[action.weekId] = { status: 'unloaded', pages: [] };\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n}","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport { GET_PAGES_START, GET_PAGES_ERROR, GET_PAGES_SUCCESS } from '../../reducers/pages/actions';\r\nimport Page from '../../reducers/pages/page';\r\n\r\nfunction start(weekId : number) {\r\n    return {\r\n        type : GET_PAGES_START,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction fail(weekId : number) {\r\n    return {\r\n        type : GET_PAGES_ERROR,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction success(weekId : number, pages : Page[]) {\r\n    return {\r\n        type : GET_PAGES_SUCCESS,\r\n        weekId : weekId,\r\n        data : pages\r\n    }\r\n};\r\n\r\nexport default function GetPages(weekId : number) {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start(weekId));\r\n        return api.get(`/week/${weekId}/page`)\r\n            .then(response => dispatch(success(weekId, response.data as Page[])))\r\n            .catch(err => dispatch(fail(weekId)));\r\n    }\r\n}","import Page from \"./page\";\r\n\r\nexport const GET_PAGES_START = 'get_pages_start';\r\nexport const GET_PAGES_SUCCESS = 'get_pages_success';\r\nexport const GET_PAGES_ERROR = 'get_pages_error';\r\n\r\nexport const ADD_PAGE_START = 'add_page_start';\r\nexport const ADD_PAGE_SUCCESS = 'add_page_success';\r\nexport const ADD_PAGE_ERROR = 'add_page_error';\r\n\r\nexport interface GetPagesStartAction {\r\n    type : typeof GET_PAGES_START;\r\n    weekId : number;\r\n}\r\n\r\nexport interface GetPagesSuccessAction {\r\n    type : typeof GET_PAGES_SUCCESS;\r\n    weekId : number;\r\n    data : Page[];\r\n}\r\n\r\nexport interface GetPagesErrorAction {\r\n    type : typeof GET_PAGES_ERROR;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageStartAction {\r\n    type : typeof ADD_PAGE_START;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageSuccessAction {\r\n    type : typeof ADD_PAGE_SUCCESS;\r\n    weekId : number;\r\n}\r\n\r\nexport interface AddPageErrorAction {\r\n    type : typeof ADD_PAGE_ERROR;\r\n    weekId : number;\r\n}\r\n\r\n\r\ntype GetPagesAction = GetPagesStartAction | GetPagesSuccessAction | GetPagesErrorAction;\r\ntype AddPageAction = AddPageStartAction | AddPageSuccessAction | AddPageErrorAction;\r\ntype PagesAction = GetPagesAction | AddPageAction;\r\n\r\nexport default PagesAction;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageCard: {\r\n        width: '220px',\r\n        height: '280px'\r\n    },\r\n    pageButton: {\r\n        width: '220px',\r\n        height: '280px',\r\n        fontSize: '3em'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 700,\r\n        height: 300,\r\n        margin: 'auto',\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5]\r\n    },\r\n    modalContent: {\r\n        height: 252,\r\n        width: 652,\r\n        backgroundColor: 'white',\r\n        outline: 'none',\r\n        padding: 24\r\n    },\r\n    modalGrid: {\r\n        height: 202\r\n    },\r\n    cardContent: {\r\n        width: 220,\r\n        height: 280,\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    description: {\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, Typography, Button, ButtonBase, CardContent } from '@material-ui/core';\r\nimport Page from '../../reducers/pages/page';\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface AddPageProps {\r\n    weekId : number;\r\n    onAdd : () => void;\r\n}\r\n\r\nexport function AddPageCard(props : AddPageProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.pageCard}>\r\n            <Button \r\n                className={classes.pageButton}\r\n                onClick={props.onAdd}\r\n            >\r\n                +\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default function PageCard(props : Page) {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card className={classes.pageCard}>\r\n            <ButtonBase className={classes.cardContent} onClick={() => window.open(`https://www.homestuck.com/story/${props.pageNumber}`)}>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography className={classes.title} variant='h6'>#{props.pageNumber}</Typography>\r\n                    <Typography className={classes.description} variant='subtitle1'>{props.description}</Typography>\r\n                </CardContent>\r\n            </ButtonBase>\r\n        </Card>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Grid, Typography, Button, Input } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nexport interface NewPageProps {\r\n    onAccept : (pageNumber : number, description : string) => void;\r\n}\r\n\r\nexport default function NewPage(props : NewPageProps) {\r\n    const classes = useStyles();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    return(\r\n        <div className={classes.modalContent}>\r\n            <Grid className={classes.modalGrid} container>\r\n                <Grid item xs={12}><Typography variant='h4'>Add New Page</Typography></Grid>\r\n                <Grid item xs={6}><label>Page Number</label></Grid>\r\n                <Grid item xs={6}><Input type='number' onChange={e => setPageNumber(parseInt(e.target.value))} /></Grid>\r\n                <Grid item xs={6}><label>Description</label></Grid>\r\n                <Grid item xs={6}><Input type='text' onChange={e => setDescription(e.target.value)} /></Grid>\r\n            </Grid>\r\n            <Button\r\n                onClick={() => props.onAccept(pageNumber, description)}\r\n                variant='contained'\r\n                color='primary'\r\n            >\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectPages } from '../../reducers/pages';\r\nimport GetPages from '../../api/pages/get';\r\nimport { CircularProgress, Grid, Modal, Typography, Button } from '@material-ui/core';\r\nimport PageCard, { AddPageCard } from './pagecard';\r\nimport useStyles from './styles';\r\nimport NewPage from './newpage';\r\nimport AddPage from '../../api/pages/add';\r\n\r\nexport interface PagesProps {\r\n    weekId : number;\r\n}\r\n\r\nexport default function PagesDisplay(props : PagesProps) {\r\n    const allPages = useSelector(selectPages);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const pageStatus = allPages[props.weekId];\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const children = [];\r\n\r\n    if (pageStatus === undefined) {\r\n        GetPages(props.weekId)(dispatch);\r\n    } else {\r\n        switch (pageStatus.status) {\r\n            case 'unloaded':\r\n                GetPages(props.weekId)(dispatch);\r\n                break;\r\n            case 'loading':\r\n                children.push(<Grid item xs={12}><CircularProgress /></Grid>);\r\n                break;\r\n            case 'loaded':\r\n                pageStatus.pages.forEach(page => {\r\n                    children.push(<Grid item xs={4}><PageCard {...page} /></Grid>);\r\n                });\r\n                children.push(<Grid item xs={4}><AddPageCard weekId={props.weekId} onAdd={() => setModalOpen(true)}/></Grid>);\r\n                break;\r\n            case 'errored':\r\n                children.push(<Grid item xs={12}><span>Error</span></Grid>);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function addPage(pageNumber : number, description : string) {\r\n        setModalOpen(false);\r\n        AddPage(props.weekId, { pageNumber, description })(dispatch);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} justify='space-evenly'>\r\n                {children}\r\n            </Grid>\r\n            <Modal\r\n                className={classes.modal}\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n            >\r\n                <NewPage onAccept={addPage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import api from '../api';\r\nimport { Dispatch } from 'redux';\r\nimport { ADD_PAGE_START, ADD_PAGE_SUCCESS, ADD_PAGE_ERROR } from '../../reducers/pages/actions';\r\nimport Page from '../../reducers/pages/page';\r\n\r\nfunction start(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_START,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction fail(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_ERROR,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nfunction success(weekId : number) {\r\n    return {\r\n        type : ADD_PAGE_SUCCESS,\r\n        weekId : weekId\r\n    }\r\n};\r\n\r\nexport default function AddPage(weekId : number, page : Page) {\r\n    return function(dispatch : Dispatch) {\r\n        dispatch(start(weekId))\r\n        return api.put(`/week/${weekId}/page`, page)\r\n            .then(response => dispatch(success(weekId)))\r\n            .catch(err => dispatch(fail(weekId)));\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport WeekDisplay from '../weekdisplay';\r\nimport { Tab } from '@material-ui/core';\r\nimport { TabPanel, TabContext, TabList } from '@material-ui/lab';\r\nimport PagesDisplay from '../pagesdisplay';\r\nimport Week from '../../reducers/week/week';\r\nimport { Person } from '../personselect';\r\n\r\nexport interface PageProps {\r\n    week : Week;\r\n    user : Person | undefined;\r\n}\r\n\r\ntype TabType = 'pages' | 'answer' | 'guesses';\r\n\r\nexport default function Page(props : PageProps) {\r\n    const [tab, setTab] = useState<TabType>('pages');\r\n    const changeTab = (event: React.ChangeEvent<{}>, newValue : TabType) => {\r\n        setTab(newValue);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <WeekDisplay\r\n                id={props.week.id}\r\n                title={props.week.name}\r\n                firstPage={props.week.firstPage}\r\n                lastPage={props.week.lastPage}\r\n                image={props.week.pictureSrc}\r\n                showButton={false}\r\n            />\r\n            <TabContext value={tab}>\r\n                <TabList onChange={changeTab} variant='fullWidth'>\r\n                    <Tab\r\n                        value='pages'\r\n                        label='Pages'\r\n                        wrapped\r\n                    />\r\n                    <Tab\r\n                        value='answer'\r\n                        label='My Answer'\r\n                        disabled={props.user === undefined}\r\n                        wrapped\r\n                    />\r\n                    <Tab\r\n                        value='guesses'\r\n                        label='My Guesses'\r\n                        disabled={props.user === undefined}\r\n                        wrapped\r\n                    />\r\n                </TabList>\r\n                <TabPanel value='pages'>\r\n                    <PagesDisplay weekId={props.week.id} />\r\n                </TabPanel>\r\n                <TabPanel value='answer'>\r\n                    This bit of the site is still under construction :(\r\n                </TabPanel>\r\n                <TabPanel value='guesses'>\r\n                    This bit of the site is still under construction :(\r\n                </TabPanel>\r\n            </TabContext>\r\n        </>\r\n    );\r\n}","import React, { ReactElement } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GetWeeks from '../../api/weeks/get';\r\nimport { CircularProgress, Typography } from '@material-ui/core';\r\nimport Page from './page';\r\nimport { selectWeeks } from '../../reducers/week';\r\nimport { Person } from '../personselect';\r\n\r\nexport default function WeekPage(props : { user : Person | undefined }) {\r\n    let { id } = useParams();\r\n    const children : ReactElement[] = [];\r\n    const weekState = useSelector(selectWeeks);\r\n    const dispatch = useDispatch();\r\n\r\n    switch (weekState.status) {\r\n        case 'unloaded':\r\n            GetWeeks()(dispatch);\r\n            children.push(<CircularProgress />);\r\n            break;\r\n        case 'loading':\r\n            children.push(<CircularProgress />);\r\n            break;\r\n        case 'errored':\r\n            children.push(<Typography>There was an error loading the weeks</Typography>);\r\n            break;\r\n        default:\r\n            const week = weekState.weeks.filter(w => w.id === parseInt(id))[0];\r\n            if (week !== undefined) {\r\n                children.push(\r\n                    <Page week={week} user={props.user} />\r\n                );\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: '10px'\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/header';\r\nimport Main from './components/main';\r\nimport { ThemeProvider, Container } from '@material-ui/core';\r\nimport theme from './theme';\r\nimport { Person } from './components/personselect';\r\nimport WeekPage from './components/weekpage';\r\nimport useStyles from './styles';\r\nconst rootbase = process.env.NODE_ENV === 'production' ? '/homestuck-bookclub-guesses/' : '/';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<Person | undefined>(undefined);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Header user={user} setUser={p => setUser(p)} />\r\n          <Container\r\n              className={classes.container}\r\n              maxWidth='lg'\r\n          >\r\n            <Switch>\r\n              <Route path={`${rootbase}week/:id`}>\r\n                <WeekPage user={user} />\r\n              </Route>\r\n              <Route path={rootbase}>\r\n                <Main />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n        </Router>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport { rootbase };\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport WeekReducer from './week';\r\nimport PagesReducer from './pages';\r\n\r\nconst root = combineReducers({week : WeekReducer, pages : PagesReducer});\r\n\r\nexport default root;\r\n\r\nexport type RootState = ReturnType<typeof root>;","import { createStore } from 'redux';\r\nimport root from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(root, composeWithDevTools());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}